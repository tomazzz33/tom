description = "Builder for the GCF Java 11 runtime"

[[buildpacks]]
  id = "google.java.maven"
  uri = "maven.tgz"

[[buildpacks]]
  id = "google.java.gradle"
  uri = "gradle.tgz"

[[buildpacks]]
  id = "google.java.functions-framework"
  uri = "functions_framework.tgz"

[[buildpacks]]
  id = "google.utils.archive-source"
  uri = "archive_source.tgz"

[[buildpacks]]
  id = "google.utils.label"
  uri = "label.tgz"

# We'll use google.java.maven to compile the function code if there is a pom.xml.
# In that case google.java.functions-framework will inspect the pom.xml to
# determine what should be in the classpath of the final function.
[[order]]

  [[order.group]]
    id = "google.utils.archive-source"

  [[order.group]]
    id = "google.java.maven"

  [[order.group]]
    id = "google.java.functions-framework"

  [[order.group]]
    id = "google.utils.label"

# We'll use google.java.gradle to compile the function code if there is a build.gradle.
# In that case google.java.functions-framework will inspect the build.gradle to
# determine what should be in the classpath of the final function. Since
# google.java.gradle is optional, google.java.functions-framework will also run
# if there is neither a pom.xml nor a build.gradle. In that case, it expects
# there is an already-compiled jar file and that's what it will put in the
# classpath.
[[order]]

  [[order.group]]
    id = "google.utils.archive-source"

  [[order.group]]
    id = "google.java.gradle"
    optional = true

  [[order.group]]
    id = "google.java.functions-framework"

  [[order.group]]
    id = "google.utils.label"

[stack]
  id = "google.java11"
  build-image = "gcr.io/gae-runtimes/buildpacks/java11/build"
  run-image = "gcr.io/gae-runtimes/buildpacks/java11/run"

[lifecycle]
  version = "0.11.1"
